#!/bin/bash
 a="\e[1;32m+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+\e[0m"
 b="\e[1;32m+--------------------------------------------------------------------------------+\e[0m"
#c
#d
#e
function menu {
clear
tput cup 0 0; echo -e "$a"
tput cup 1 0
 for (( c=0; c<=36; c++ ))
  do
   echo -e "\e[1;32m|                                                                                |\e[0m"
  done
#
tput cup  1  1;echo -e "\e[1;36m VT100 Widget Resources \e[0m\e[36m Ресурсы виджетов VT100\e[0m                           - B -"
tput cup  2  0;echo -e "$b"
tput cup  3  1;echo -e "\e[33m [1]\e[0m «true», это включает особый случай растровых шрифтов       \e[32m assumeAllChars\e[0m"
tput cup  4  1;echo -e "\e[33m [2]\e[0m «true», xterm будет поддерживать область просмотра         \e[32m autoScrollLock\e[0m"
tput cup  5  1;echo -e "\e[33m [3]\e[0m Указывает, должен ли быть включен автоматический перенос         \e[32m autoWrap\e[0m"
tput cup  6  1;echo -e "\e[33m [4]\e[0m использует ли xterm тайм-аут в 50 миллисекунд для ввода        \e[32m awaitInput\e[0m"
tput cup  7  1;echo -e "\e[33m [5]\e[0m передает ли клавиша со стрелкой назад символ возврата        \e[32m backarrowKey\e[0m"
tput cup  8  1;echo -e "\e[33m [6]\e[0m Определяет цвет, используемый для фона окна                    \e[33m background\e[0m"
tput cup  9  1;echo -e "\e[33m [7]\e[0m устанавливать подсказку срочности для оконного менеджера     \e[32m bellIsUrgent\e[0m"
tput cup 10  1;echo -e "\e[33m [8]\e[0m будет ли звучать звонок при выполнении полной перезагрузки    \e[32m bellOnReset\e[0m"
tput cup 11  1;echo -e "\e[33m [9]\e[0m Количество миллисекунд после отправки команды звонка     \e[32m bellSuppressTime\e[0m"
tput cup 12  1;echo -e "\e[33m [a]\e[0m комбинировать ли полужирный атрибут с цветами, как IBM PC      \e[32m boldColors\e[0m"
tput cup 13  1;echo -e "\e[33m [b]\e[0m Указывает имя полужирного шрифта, вместо зачеркивания            \e[32m boldFont\e[0m"
tput cup 14  1;echo -e "\e[33m [c]\e[0m должен ли текст с полужирным атрибутом быть перечеркнутым        \e[32m boldMode\e[0m"
tput cup 15  1;echo -e "\e[33m [d]\e[0m true, xterm применяет обходной путь                        \e[32m brokenLinuxOSC\e[0m"
tput cup 16  1;echo -e "\e[33m [e]\e[0m xterm в 8-битном режиме интерпретирует выборки STRING    \e[32m brokenSelections\e[0m"
tput cup 17  1;echo -e "\e[33m [f]\e[0m обходной путь для некоторых маршрутизаторов ISDN         \e[32m brokenStringTerm\e[0m"
tput cup 18  1;echo -e "\e[33m [g]\e[0m следует ли учитывать управляющую последовательность VT102 DECCOLM    \e[32m c132\e[0m"
tput cup 19  1;echo -e "\e[33m [h]\e[0m кэшировать ли xterm шрифты двойного размера               \e[32m cacheDoublesize\e[0m"
tput cup 20  1;echo -e "\e[33m [i]\e[0m прокручивать ли новую страницу при очистке всего экрана      \e[32m cdXtraScroll\e[0m"
tput cup 21  1;echo -e "\e[33m [j]\e[0m списки привязок классов символов формы low[-high][:value]       \e[32m charClass\e[0m"
tput cup 22  1;echo -e "\e[33m [k]\e[0m DEC VT420 поддерживают последовательность DECRQCRA      \e[32m checksumExtension\e[0m"
tput cup 23  1;echo -e "\e[33m [l]\e[0m следовать ли традиционному восточноазиатскому соглашению         \e[32m cjkWidth\e[0m"
tput cup 24  1;echo -e "\e[33m [m]\e[0m Они определяют цвета для 256-цветного расширения                 \e[32m color255\e[0m"
tput cup 25  1;echo -e "\e[33m [n]\e[0m если разрешена только часть ресурсов                        \e[32m colorAttrMode\e[0m"
tput cup 26  1;echo -e "\e[33m [o]\e[0m цвет используемый для отображения полужирных символов             \e[32m colorBD\e[0m"
tput cup 27  1;echo -e "\e[33m [p]\e[0m цвет, используемый для отображения полужирных символов        \e[32m colorBDMode\e[0m"
tput cup 28  1;echo -e "\e[33m [q]\e[0m цвет, используемый для отображения мерцающих символов             \e[32m colorBL\e[0m"
tput cup 29  1;echo -e "\e[33m [r]\e[0m должны ли символы с атрибутом blink отображаться в цвете      \e[32m colorBLMode\e[0m"
tput cup 30  1;echo -e "\e[33m [s]\e[0m цвет, используемый для отображения курсивных символов             \e[32m colorIT\e[0m"
tput cup 31  1;echo -e "\e[33m [t]\e[0m символы с атрибутом курсив отображаться в цвете или курсивом  \e[32m colorITMode\e[0m"
tput cup 32  1;echo -e "\e[33m [u]\e[0m Обычно xterm заполняет внутреннюю границу окна VT100     \e[32m colorInnerBorder\e[0m"
tput cup 33  0;echo -e "$b"
#
tput cup 35  0;echo -e "$b"
tput cup 36  1;echo -e "\e[33m [v]\e[0m Далее                                                                \e[32m Next\e[0m"
tput cup 37  1;echo -e "\e[33m [0]\e[0m Выход                                                                \e[32m Exit\e[0m"
tput cup 38  0;echo -e "$a"
#
tput cup 34  1;echo -e "\e[33m [ ]\e[0m Ожидание ввода команды: "
tput cup 34 30;read -n 1 option
#
}
#menu software
while [ $? -ne 1 ]
do
menu
case $option in
0)
clear
exit 0
;;
1)load;clear;echo -e "
\e[32m assumeAllChars\e[0m (class AssumeAllChars)
 Если установлено значение «true», это включает особый случай растровых шрифтов,
 позволяющий серверу шрифтов выбирать, как отображать отсутствующие глифы.
 По умолчанию установлено значение «истина».
 Этот ресурс предназначен для помощи с некоторыми квазиавтоматически
 сгенерированными шрифтами (такими как кодировка ISO-10646-1 Terminus),
 которые имеют неверные метрики шрифта.
";;
2)load;clear;echo -e "
\e[32m autoScrollLock\e[0m (class AutoScrollLock)
 Если установлено значение «true», xterm будет поддерживать область просмотра
 отображаемых строк всякий раз, когда отображается прокрутка назад, как если бы
 был включен параметр allowScrollLock и была нажата клавиша Scroll Lock.
 По умолчанию «false».
 Эта функция полезна только в том случае,
 если для ресурса scrollTtyOutput установлено значение «false».
";;
3)load;clear;echo -e "
\e[32m autoWrap\e[0m (class AutoWrap)
 Указывает, должен ли быть включен автоматический перенос.
 Это то же самое, что и VT102 DECAWM. По умолчанию установлено значение «true».
";;
4)load;clear;echo -e "
\e[32m awaitInput\e[0m (class AwaitInput)
 Указывает, использует ли xterm тайм-аут в 50 миллисекунд для ожидания ввода
 (т. е. для поддержки полосы прокрутки со стрелкой Xaw3d). По умолчанию «false».
";;
5)load;clear;echo -e "
\e[32m backarrowKey\e[0m (class BackarrowKey)
 Указывает, передает ли клавиша со стрелкой назад символ возврата (8) или символ
 удаления (127). Это соответствует управляющей последовательности DECBKM.
 «true» значение указывает на возврат. По умолчанию установлено значение «true».
 Нажатие клавиши управления переключает это поведение.
";;
6)load;clear;echo -e "
 (class Background) Определяет цвет, используемый для фона окна.
 По умолчанию используется «XtDefaultBackground».
\e[32m xterm*background:black\e[0m
";;
7)load;clear;echo -e "
\e[32m bellIsUrgent\e[0m (class BellIsUrgent)
 Указывает, следует ли устанавливать подсказку срочности для оконного менеджера
 при звонке звонка. По умолчанию «false».
";;
8)load;clear;echo -e "
\e[32m bellOnReset\e[0m (class BellOnReset)
 Указывает, будет ли звучать звонок при выполнении полной перезагрузки.
 По умолчанию установлено значение «false».
";;
9)load;clear;echo -e "
\e[32m bellSuppressTime\e[0m (class BellSuppressTime)
 Количество миллисекунд после отправки команды звонка, в течение которого
 дополнительные звонки будут подавлены. По умолчанию 200.
 Если установлено ненулевое значение, дополнительные звонки также будут
 подавляться, пока сервер не сообщит, что обработка первого звонка завершена;
 эта функция наиболее полезна с видимым звонком.
";;
a)load;clear;echo -e "
\e[32m boldColors\e[0m (class ColorMode)
 Указывает, следует ли комбинировать полужирный атрибут с цветами, такими как
 IBM PC, т. е. сопоставлять цвета от 0 до 7 с цветами от 8 до 15.
 Обычно это более яркие версии первых 8 цветов, следовательно, полужирный.
 По умолчанию установлено значение «true».
";;
b)load;clear;echo -e "
\e[32m boldFont\e[0m (class BoldFont)
 Указывает имя полужирного шрифта, который следует использовать вместо зачеркивания.
 Для этого ресурса нет значений по умолчанию.
 Этот шрифт должен иметь ту же высоту и ширину, что и обычный шрифт, в противном
 случае он игнорируется. Если указан только один из обычных или полужирных шрифтов,
 он будет использоваться как обычный шрифт, а полужирный шрифт будет создан путем
 зачеркивания этого шрифта.
 См. также обсуждение ресурсов boldMode и alwaysBoldMode.
";;
c)load;clear;echo -e "
\e[32m boldMode\e[0m (class BoldMode)
 Это указывает, должен ли текст с полужирным атрибутом быть перечеркнутым для
 имитации жирного шрифта, если разрешенный полужирный шрифт такой же, как обычный
 шрифт. Может быть желательно отключить полужирный шрифт, когда цвет используется
 для полужирного атрибута.
 Обратите внимание, что xterm имеет один полужирный шрифт, который вы можете
 указать явно. Xterm пытается получить полужирный шрифт для других выбранных шрифтов
 (от font1 до font7). Если он не может найти полужирный шрифт, он будет использовать
 обычный шрифт. В каждом случае (будь то явный ресурс или производный шрифт),
 если обычный и полужирный шрифты различаются, этот ресурс не действует.
 По умолчанию установлено значение «true».
 См. ресурс alwaysBoldMode, который может изменить поведение этого ресурса.
 Хотя xterm пытается получить полужирный шрифт для других выбранных шрифтов,
 сервер шрифтов может не сотрудничать.
 Начиная с версии X11R6 растровые шрифты масштабируются.
 Сервер шрифтов утверждает, что предоставляет полужирный шрифт, который
 запрашивает xterm, но результат не всегда читаем.
 XFree86 представила функцию, которую можно использовать для подавления
 масштабирования.
 В файле конфигурации X-сервера
 (например, «/etc/X11/XFree86» или «/etc/X11/xorg.conf»)
 вы можете добавить «:unscaled» в конец спецификации каталога для misc,
 которые включают в себя шрифты с фиксированным шагом, используемые xterm.
 Например:
 FontPath \"/usr/lib/X11/fonts/misc/\"
 станет
 FontPath \"/usr/lib/X11/fonts/misc/:unscaled\"
 В зависимости от вашей конфигурации сервер шрифтов может иметь собственный файл
 конфигурации. Тот же «:unscaled» можно добавить в его файл конфигурации в конце
 спецификации каталога для «misc».
 Функция масштабирования растрового изображения также используется xterm
 для реализации символов двойной ширины и высоты VT102.
";;
d)load;clear;echo -e "
\e[32m brokenLinuxOSC\e[0m (class BrokenLinuxOSC)
 Если значение равно true, xterm применяет обходной путь для игнорирования
 искаженных управляющих последовательностей, которые может отправить сценарий Linux.
 Сравните последовательности управления палитрой, задокументированные
 в console_codes, с ECMA-48. По умолчанию установлено значение «true».
";;
e)load;clear;echo -e "
\e[32m brokenSelections\e[0m (class BrokenSelections)
 Если значение равно true, xterm в 8-битном режиме будет интерпретировать выборки
 STRING как несущие текст в кодировке текущей локали. Обычно выборки STRING
 содержат текст в кодировке ISO-8859-1. Установка для этого ресурса значения «true»
 нарушает ICCCM; это может, однако может быть полезен для взаимодействия с
 некоторыми неработающими клиентами X. По умолчанию установлено значение «false».
";;
f)load;clear;echo -e "
\e[32m brokenStringTerm\e[0m (class BrokenStringTerm)
 предоставляет обходной путь для некоторых маршрутизаторов ISDN, которые запускают
 строку управления приложением, не завершая ее. Установите значение «true»,
 если xterm зависает при подключении. По умолчанию «false».
 Анализатор состояния Xterm распознает несколько типов управляющих строк,
 которые могут содержать текст, например,
 APC (Application Program Command)
 DCS (Device Control String)
 OSC (Operating System Command)
 PM (Privacy Message)
 SOS (Start of String)

 Каждый должен заканчиваться терминатором строки (специальным символом, который
 не может использоваться в этих строках). Обычные управляющие символы, найденные
 в строке, не игнорируются; они обрабатываются, не мешая процессу накопления
 содержимого строки управления. Xterm распознает эти элементы управления во всех
 режимах, хотя некоторые функции могут быть подавлены после разбора элемента
 управления. Если эта функция включена, пользователь может выйти из незавершенной
 управляющей строки при обнаружении любого из этих обычных управляющих символов:
 control/D (used as an end of file in many shells),
 control/H (backspace),
 control/I (tab-feed),
 control/J (line feed aka newline),
 control/K (vertical tab),
 control/L (form feed),
 control/M (carriage return),
 control/N (shift-out),
 control/O (shift-in),
 control/Q (XOFF),
 control/X (cancel)
";;
g)load;clear;echo -e "
\e[32m c132 (class C132)\e[0m
 Указывает, следует ли учитывать управляющую последовательность VT102 DECCOLM,
 используемую для переключения между 80 и 132 столбцами. По умолчанию «ложь».
";;
h)load;clear;echo -e "
\e[32m cacheDoublesize\e[0m (class CacheDoublesize) Сообщает,
 кэшировать ли xterm шрифты двойного размера. Установите это значение равным нулю,
 чтобы полностью отключить шрифты двойного размера.
";;
i)load;clear;echo -e "
\e[32m cdXtraScroll\e[0m (class CdXtraScroll)
 Указывает, должен ли xterm прокручивать новую страницу при очистке всего экрана.
 Как и в случае с tiXtraScroll, целью этой опции является предоставление
 изображения полноэкранного отображения приложения на полосе прокрутки перед
 удалением текста. Xterm принимает либо ключевое слово (без учета регистра),
 либо число, указанное в скобках:
\e[32m false (0)\e[0m в прокрутку ничего не добавляется.
\e[32m true  (1)\e[0m текущий экран добавляется в прокрутку.
\e[32m trim  (2)\e[0m текущий экран добавляется в прокрутку,
 но повторяющиеся пустые строки обрезаются (сокращаются до одной пустой строки).
 По умолчанию для этого ресурса установлено значение «false».
";;
j)load;clear;echo -e "
\e[32m charClass\e[0m (class CharClass)
 Указывает разделенные запятыми списки привязок классов символов формы
 low[-high][:value].
 Они используются для определения того, какие наборы символов должны
 обрабатываться одинаково при вырезании и вставке. См. раздел КЛАССЫ ПЕРСОНАЖЕЙ.
";;
k)load;clear;echo -e "
\e[32m checksumExtension\e[0m (class ChecksumExtension)
 DEC VT420 и выше поддерживают управляющую последовательность DECRQCRA,
 которая сообщает контрольную сумму символов в прямоугольнике.
 Xterm поддерживает это с расширениями, которые можно настроить с помощью битов
 checksumExtension:
 0 не отменяет результат.
 1 не сообщают атрибуты видео VT100.
 2 не опускайте контрольную сумму для пробелов.
 3 опустить контрольную сумму для ячеек, не инициализированных явно.
 4 не маскировать значение ячейки до 8бит, не игнорировать комбинированные символы.
 5 не маскировать значение ячейки до 7 бит.
 Со значением по умолчанию (0) xterm соответствует поведению терминалов DEC.
 Чтобы использовать все расширения, установите все биты, например «-1».
";;
l)load;clear;echo -e "
\e[32m cjkWidth\e[0m (class CjkWidth)
 Указывает, должен ли xterm следовать традиционному восточноазиатскому соглашению
 о ширине. При включении символы с категорией восточноазиатских неоднозначностей
 (A) в UTR 11 имеют ширину столбца, равную 2. Возможно, вам придется установить
 для этой опции значение «true», если у вас есть старые восточноазиатские
 терминальные программы, которые предполагают, что рисование линий символы имеют
 ширину столбца 2. Если этот ресурс имеет значение false, ресурс mkWidth управляет
 выбором между системными встроенными таблицами wcwidth и xterm.
 По умолчанию false.
 color0 (class Color0)
 color1 (class Color1)
 color2 (class Color2)
 color3 (class Color3)
 color4 (class Color4)
 color5 (class Color5)
 color6 (class Color6)
 color7 (class Color7)
 Они определяют цвета для расширения ISO-6429.
 По умолчанию используются следующие цвета: черный, красный3, зеленый3, желтый3,
 настраиваемый темно-синий, пурпурный3, голубой3 и серый90.
 Оттенки цвета по умолчанию выбраны так,
 чтобы цвета 8–15 можно было использовать в качестве более ярких версий.
 color8 (class Color8)
 color9 (class Color9)
 color10 (class Color10)
 color11 (class Color11)
 color12 (class Color12)
 color13 (class Color13)
 color14 (class Color14)
 color15 (class Color15)
 Они определяют цвета для расширения ISO-6429,
 если атрибут полужирного также включен. Значения ресурсов по умолчанию:
 серый50, красный, зеленый, желтый, настраиваемый светло-синий, пурпурный,
 голубой и белый.
 color16 (class Color16)
 вследствие
";;
m)load;clear;echo -e "
\e[32m color255\e[0m (class Color255)
 Они определяют цвета для 256-цветного расширения.
 Значения ресурсов по умолчанию предназначены для
 • цвета с 16 по 231, чтобы получился цветной куб 6x6x6, и
 • цвета с 232 по 255, чтобы создать шкалу оттенков серого.
 Ресурсы выше color15 доступны как опция времени компиляции.
 Из-за жестко запрограммированного ограничения в библиотеках X на общее количество
 ресурсов (до 400) ресурсы для 256 цветов опускаются, когда включена поддержка
 расширенных символов и luit.
 Помимо непоследовательного поведения, если разрешена только часть ресурсов,
 трудно определить точное отсечение, а X-библиотеки имеют тенденцию к сбою,
 если количество ресурсов превышает лимит.
 Цветовая палитра по-прежнему инициализируется теми же значениями по умолчанию
 и может быть изменена с помощью управляющих последовательностей.
 Oграничение ресурсов позволяет включить весь диапазон для 88 цветов.
";;
n)load;clear;echo -e "
\e[32m colorAttrMode\e[0m (class ColorAttrMode)
 Помимо непоследовательного поведения, если разрешена только часть ресурсов,
 трудно определить точное отсечение, а X-библиотеки имеют тенденцию к сбою,
 если количество ресурсов превышает лимит.,
";;
o)load;clear;echo -e "
\e[32m colorBD\e[0m (class ColorBD)
 Это указывает цвет, используемый для отображения полужирных символов,
 если включен ресурс «colorBDMode». По умолчанию используется XtDefaultForeground
 См. также ресурс veryBoldColors,
 который позволяет комбинировать полужирный шрифт и цвет.
";;
p)load;clear;echo -e "
\e[32m colorBDMode\e[0m (class ColorAttrMode)
 Это указывает цвет, используемый для отображения полужирных символов,
 если включен ресурс «colorBDMode». По умолчанию используется XtDefaultForeground
 См. также ресурс veryBoldColors,
 который позволяет комбинировать полужирный шрифт и цвет.
";;
q)load;clear;echo -e "
\e[32m colorBL\e[0m (class ColorBL)
 Это определяет цвет, используемый для отображения мерцающих символов,
 если включен ресурс «colorBLMode». По умолчанию используется XtDefaultForeground
 См. также ресурс veryBoldColors,
 который позволяет комбинировать подчеркивание и цвет.
";;
r)load;clear;echo -e "
\e[32m colorBLMode\e[0m (class ColorAttrMode)
 Указывает, должны ли символы с атрибутом blink отображаться в цвете.
 Обратите внимание, что при отключении colorMode отключаются все цвета,
 включая этот. По умолчанию «false».
";;
s)load;clear;echo -e "
\e[32m colorIT\e[0m (class ColorIT)
 Это определяет цвет, используемый для отображения курсивных символов,
 если включен ресурс «colorITMode». По умолчанию используется XtDefaultForeground
 См. также ресурс veryBoldColors, который позволяет комбинировать атрибуты и цвет.
";;
t)load;clear;echo -e "
\e[32m colorITMode\e[0m (class ColorAttrMode)
 Указывает, должны ли символы с атрибутом курсив отображаться в цвете или курсивом.
 По умолчанию «false».
 Обратите внимание, что:
 • Отключение colorMode отключает все цвета, включая курсив.
 • Ресурс italicULMode переопределяет colorITMode.
";;
u)load;clear;echo -e "
\e[32m colorInnerBorder\e[0m (class ColorInnerBorder)
 Обычно xterm заполняет внутреннюю границу окна VT100, используя цвет фона.
 Если ресурс colorInnerBorder включен, при запуске xterm будет сравнивать
 borderColor и цвет фона окна. Если они отличаются, xterm будет использовать
 ресурс borderColor для заполнения внутренней границы.
 В противном случае он будет использовать цвет фона окна.
 The default is “false”.
";;
v)load;clear;./nXtermResourcesVT100WidgetC.sh;;
*)
clear
echo -e "\e[33m Неверный ввод данных, пожалуйста повторите ввод \e[0m";;
esac
echo -en "\e[33m Пожалуйста нажмите любую клавишу для продолжения \e[0m"
read -n 1 line
done
clear
